testinfo:
    summary:     'Test MixMonitor recording functionality applications'
    description: |
        'This test verifies basic functionality of the recording feature in
         MixMonitor by creating a local channel that plays digits 1,2,3 and
         triggers AMI actions to start, mute and stop MixMonitor.
         The test passes when the according AMI events have been received, and
         the SoundChecker pluggable module verifies that the file is the correct
         size and contains energy, meaning a file was created and stored the
         recording correctly.'
test-modules:
        add-test-to-search-path: True
        test-object:
            config-section: test-object-config
            typename: 'test_case.TestCaseModule'
        modules:
          - config-section: start-call
            typename: 'pluggable_modules.Originator'
          - config-section: ami-actions
            typename: 'pluggable_modules.EventActionModule'
          - config-section: sound-file-analyzer
            typename: 'pluggable_modules.SoundChecker'
          - config-section: expected-ami-events
            typename: 'ami.AMIEventModule'

test-object-config:
    asterisk-instances: 1
    connect-ami: true

start-call:
    channel: 'Local/talk@default'
    context: 'default'
    exten: 'echo'
    priority: 1
    trigger: 'ami_connect'
    async: True

ami-actions:
    -
        ami-events:
            conditions:
                match:
                    Event: 'UserEvent'
                    UserEvent: 'test-manager-monitor'
                    Action: 'start'
            count: 1
        ami-actions:
            action:
                Action: 'MixMonitor'
                Channel: '{channel}'
                File: 'theRecording.wav'
                Options: 'ri(monty)'
    -
        ami-events:
            conditions:
                match:
                    Event: 'UserEvent'
                    UserEvent: 'test-manager-monitor'
                    Action: 'mute'
            count: 1
        ami-actions:
            action:
                Action: 'MixMonitorMute'
                Channel: '{channel}'
                Direction: 'both'
                State: '1'
    -
        ami-events:
            conditions:
                match:
                    Event: 'UserEvent'
                    UserEvent: 'test-manager-monitor'
                    Action: 'unmute'
            count: 1
        ami-actions:
            action:
                Action: 'MixMonitorMute'
                Channel: '{channel}'
                Direction: 'both'
                State: '0'
    -
        ami-events:
            conditions:
                match:
                    Event: 'UserEvent'
                    UserEvent: 'test-manager-monitor'
                    Action: 'stop'
            count: 1
        ami-actions:
            action:
                Action: 'StopMixMonitor'
                Channel: '{channel}'

sound-file-analyzer:
    auto-stop: True
    sound-file-config:
        -
            trigger:
                match:
                    event: 'TestEvent'
                    type: 'StateChange'
                    state: 'MIXMONITOR_END'
            id: 0
            sound-file:
                    file-name: 'monitor/theRecording.wav'
                    file-path-type: 'relative'
                    actions:
                        -
                            type: 'size_check'
                            size: 40400
                            tolerance: 2000
                        -
                            type: 'energy_check'
                            channel: 'Local/audio@soundtest'
                            context: 'default'
                            exten: 's'
                            priority: '1'
expected-ami-events:
    -
        type: 'headermatch'
        conditions:
            match:
                Event: 'MixMonitorStart'
                Channel: 'Local/talk@default-.*'
        count: '1'
    -
        type: 'headermatch'
        conditions:
            match:
                Event: 'MixMonitorMute'
                Channel: 'Local/talk@default-.*'
                Direction: 'both'
                State: '1'
        count: '1'
    -
        type: 'headermatch'
        conditions:
            match:
                Event: 'MixMonitorMute'
                Channel: 'Local/talk@default-.*'
                Direction: 'both'
                State: '0'
        count: '1'
    -
        type: 'headermatch'
        conditions:
            match:
                Event: 'MixMonitorStop'
                Channel: 'Local/talk@default-.*'
        count: '1'

properties:
    dependencies:
        - python : 'twisted'
        - python : 'starpy'
        - asterisk: 'app_mixmonitor'
        - buildoption: 'TEST_FRAMEWORK'
    tags:
        - mixmonitor
