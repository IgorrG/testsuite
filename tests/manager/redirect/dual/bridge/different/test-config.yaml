testinfo:
    summary: 'Redirect two channels that are in two different bridges'
    description: |
        Redirect two channels that are in two different bridges, verify that
        both channels are redirected to the same dialplan location, the bridges
        they were in get destroyed, and neither channel is hung up by the process.

properties:
    dependencies:
        - python : 'twisted'
        - python : 'starpy'
        - asterisk: 'app_dial'
        - asterisk: 'app_echo'
        - asterisk: 'app_userevent'
    tags:
        - manager

test-modules:
    test-object:
        config-section: test-config
        typename: 'test_case.SimpleTestCase'
    modules:
        -
            config-section: event-action-config
            typename: 'pluggable_modules.EventActionModule'

test-config:
    # expect four user events - the first initiates the second call, the second
    # and third events are raised during redirect, and the fourth ends the test
    expected_events: 4
    stop-on-end: False
    test-iterations:
        -
            channel: 'Local/alice0@default'
            context: 'default'
            exten: 'call-bob0'
            priority: '1'
        -
            channel: 'Local/alice1@default'
            context: 'default'
            exten: 'call-bob1'
            priority: '1'
        -
            # keep the simple test case alive until all user events
            # have been raised
            channel: 'Local/keepalive@default'
            application: 'Echo'

event-action-config:
    -
        ami-events:
            # once we receive two DialEnd events (both in the 'up' state)
            # assume the channels are in their respective bridges and ready
            # to be redirected
            conditions:
                match:
                    Event: 'DialEnd'
                    DestChannel: 'Local/bob.*1'
            count: '2'
            trigger-on-count: True

        ami-actions:
            # redirect the channels to the "redirect" extension
            action:
                Action: 'Redirect'
                Channel: 'Local/alice0@default-00000000;1'
                Context: 'default'
                Exten: 'redirect'
                Priority: '1'
                Extrachannel: 'Local/alice1@default-00000002;1'
                Extracontext: 'default'
                Extraexten: 'redirect'
                Extrapriority: '1'
    -
        ami-events:
            # verify that the bridges gets destroyed
            conditions:
                match:
                    Event: 'BridgeDestroy'
                    BridgeNumChannels: '0'
            count: '2'
    -
        ami-events:
            # check to make sure that the user events are received (raised from
            # the extension the channels got redirected to) for both alices
            conditions:
                match:
                    Event: 'UserEvent'
                    Channel: 'Local/alice.*1$'
                requirements:
                    UserEvent: 'Redirected'
            count: '2'
            trigger-on-count: True

        ami-actions:
            # once we receive two redirected events check alices's status
            action:
                Action: 'Status'
    -
        ami-events:
            # make sure the alices are still up
            conditions:
                match:
                    Event: 'Status'
                    Channel: 'Local/alice.*1$'
            count: '2'
            trigger-on-count: True

        ami-actions:
            # notify the simple test case to stop
            action:
                Action: 'UserEvent'
                UserEvent: 'Done'

