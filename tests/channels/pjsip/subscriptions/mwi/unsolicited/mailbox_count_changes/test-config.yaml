testinfo:
    summary:     'Ensures MWI bodies consist of accurate information'
    description: |
        "Unsolicited MWI notifications are sent to an endpoint as mailbox state updates. sipp
        accounts notify us when an MWI notification arrives. We check the body of these MWI
        notifications to ensure that they contain the data we expect them to."


properties:
    dependencies:
        - python: 'twisted'
        - python: 'starpy'
        - app: 'sipp'
        - asterisk: 'res_pjsip'
        - asterisk: 'res_pjsip_mwi'
        - asterisk: 'res_mwi_external'
        - asterisk: 'res_mwi_external_ami'
    tags:
        - pjsip
        - mwi_external
        - refleaks

test-modules:
    add-test-to-search-path: 'True'
    test-object:
        config-section: sipp-config
        typename: 'sipp.SIPpTestCase'
    modules:
        -
            config-section: 'ami-config'
            typename: 'pluggable_modules.EventActionModule'

sipp-config:
    connect-ami: 'True'
    reactor-timeout: 30
    fail-on-any: True
    stop-after-scenarios: False
    stop_callback_module: 'mwi_check'
    stop_callback_method: 'start_test'
    test-iterations:
        # We pass the initial registers the -aa flag then let them run for a second so they can get the
        # 1-2 initial NOTIFY messages we don't care about.  The MWI AMI updates are set to start after
        -
            scenarios:
                - { 'key-args': {'scenario': 'alice-registers.xml', '-p': '5061'},
                    'ordered-args': {'-aa'} }
ami-config:
    -
        ami-events:
            conditions:
                match:
                    Event: 'UserEvent'
                    UserEvent: 'testComplete'
            count: 1
        stop_test:
