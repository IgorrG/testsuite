testinfo:
    skip: 'Unstable - ASTERISK-30214'
    summary:     'Ensures mailbox state is aggregated or not aggregated when appropriate'
    description: |
        "Alice and Bob both receive mailbox updates for mailbox_a and mailbox_b. However, Alice
        receives the aggregated state of both mailboxes and Bob receives individual mailbox notifications
        that are not aggregated. The test consists of first changing the state of mailbox_a so that it has
        2 new messages and 1 old message. Alice and Bob should each receive the same MWI update. Next,
        mailbox_b is updated to have 3 new messages and 3 old messages. Alice should receive an MWI
        notification with the combined mailbox state (5 new messages, 4 old messages) and Bob should
        receive an MWI notification with just the new mailbox state (3 new messages, 3 old messages)."


properties:
    dependencies:
        - python: 'twisted'
        - python: 'starpy'
        - app: 'sipp'
        - asterisk: 'res_pjsip'
        - asterisk: 'res_pjsip_mwi'
        - asterisk: 'res_mwi_external'
        - asterisk: 'res_mwi_external_ami'
    tags:
        - pjsip
        - mwi_external
        - refleaks

test-modules:
    add-test-to-search-path: 'True'
    test-object:
        config-section: sipp-config
        typename: 'sipp.SIPpTestCase'

sipp-config:
    connect-ami: 'True'
    reactor-timeout: 30
    fail-on-any: True
    start_callback_module: 'mwi_check'
    start_callback_method: 'walk_states'
    test-iterations:
        # We pass the initial registers the -aa flag then let them run for a second so they can get the
        # 1-2 initial NOTIFY messages we don't care about.  The MWI AMI updates are set to start after
        -
            scenarios:
                - { 'key-args': {'scenario': 'alice-registers.xml', '-p': '5061'},
                    'ordered-args': {'-aa'} }
                - { 'key-args': {'scenario': 'bob-registers.xml', '-p': '5062'},
                    'ordered-args': {'-aa'}  }
        # Combining this with the -m makes the scripts regex conditional on call_number
        -
            scenarios:
                - { 'key-args': {'scenario': 'alice-is-notified-1.xml', '-p': '5061'} }
                - { 'key-args': {'scenario': 'bob-is-notified-1.xml', '-p': '5062'} }
        -
            scenarios:
                - { 'key-args': {'scenario': 'alice-is-notified-2.xml', '-p': '5061'} }
                - { 'key-args': {'scenario': 'bob-is-notified-2.xml', '-p': '5062'} }
