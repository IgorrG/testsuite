testinfo:
    summary: "Ensure that a nominal remote attended transfer works as expected."
    description: |
        "This test uses two Asterisk and a PJSUA instance to perform a remote attended
        transfer. The PJSUA instance registers to Asterisk B, but Asterisk A has been
        configured to be able to call the PJSUA instance directly.

        Asterisk A originates a call. The first leg of the origination goes into the
        dialplan and runs Echo(). The second leg of the origination places a call to
        the PJSUA instance.

        Once it is confirmed that Asterisk A and the PJSUA instance are bridged, the
        PJSUA issues a call to Asterisk B. Asterisk B dials a local channel that runs
        Echo().

        Once it is confirmed that the PJSUA instance and Asterisk 2 are bridged, the
        PJSUA instance performs an attended transfer. This results in the PJSUA instance
        sending a REFER request to Asterisk A. Since the referenced dialog in the
        REFER's Refer-To header is not in Asterisk A, Asterisk A must perform a remote
        attended transfer.

        A remote attended transfer, from the perspective of the Asterisk server that
        is performing the transfer, actually appears to be a blind transfer, so a
        BlindTransfer event is emitted during this transfer.

        The end result should be that Asterisk A and Asterisk B are connected via SIP,
        and the PJSUA instance has hung up.

        This test kills two birds with one stone. Asterisk A is tested to ensure
        that it properly handles a REFER that refers to a remote dialog. Asterisk B
        is tested to ensure that it behaves correctly when receiving an INVITE with
        replaces."

test-modules:
    add-test-to-search-path: True
    test-object:
        config-section: test-object-config
        typename: test_case.TestCaseModule
    modules:
        -
            config-section: pjsua-config
            typename: 'pjsua_mod.PJsua'
        -
            config-section: ami-config
            typename: 'ami.AMIEventModule'

test-object-config:
    connect-ami: True
    asterisk-instances: 2

pjsua-config:
    callback_module: 'transfer'
    callback_method: 'bob_registered'
    transports:
        -
            name: 'local-ipv4'
            bind: '127.0.0.1'
            bindport: '5062'
    accounts:
        -
            name: 'bob'
            username: 'bob'
            password: 'bob'
            domain: '127.0.0.1:5061'

ami-config:
    -
        type: 'headermatch'
        id: '0'
        conditions:
            match:
                Event: 'BlindTransfer'
        requirements:
            match:
                TransfererChannel: 'PJSIP/bob-00000000'
                TransfereeChannel: 'Local/echo@default-00000000;1'
                Context: 'default'
                Extension: 'external_replaces'

properties:
    dependencies:
        - python: 'twisted'
        - python: 'starpy'
        - python: 'pjsua'
        - asterisk: 'res_pjsip'
        - asterisk: 'res_pjsip_session'
        - asterisk: 'res_pjsip_refer'

