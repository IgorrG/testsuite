testinfo:
    summary: "Redirected queue call"
    description: |
        "We have Alice call the queue, which has Local/dialbob as member. Bob will
        be called through this local channel. Upon answering, we'll have Carol call
        the dialplan and Wait() there for further instructions.

        After Carol's call is setup, we Redirect() Alice's call to the dialplan,
        which will break her call/bridge with Bob. We then use Bridge() to bridge
        Alice's call with Carol's call that was still waiting in the dialplan.

        After this scenario succeeded, there should be no leaked Stasis subscriptions,
        which we check by comparing the list of taskprocessors at the start of the test
        with the list at the end of the test. ASTERISK-28829 will cause two subscriptions/
        task processors to leak: stasis/p:bridge:all and stasis/p:channel:all"

test-modules:
    test-object:
        -
            config-section: sipp-config
            typename: 'sipp.SIPpTestCase'
    modules:
        -
            config-section: ami-config
            typename: 'pluggable_modules.EventActionModule'

sipp-config:
    memcheck-delay-stop: 7
    fail-on-any: True
    test-iterations:
        -
            scenarios:
                - { 'key-args': {'scenario': 'alice-calls-101.xml', '-i': '127.0.0.1', '-p': '5061', '-sleep':'1'} }
                - { 'key-args': {'scenario': 'bob-registers.xml', '-i': '127.0.0.1', '-p': '5062', '-oocsf': 'bob-waits-for-a-call.xml'} }
                - { 'key-args': {'scenario': 'carol-calls-102.xml', '-i': '127.0.0.1', '-p': '5063', '-sleep':'2'} }

ami-config:
    -
        # when we detect carol's call..
        ami-events:
            conditions:
                match:
                    Event: 'Newexten'
                    Channel: 'PJSIP/carol-00000002'
                    Exten: '102'
            count: 1
        # .. we redirect alice to a park extension (this will halt her call with bob)
        ami-actions:
            -
                action:
                    Action: 'Redirect'
                    Channel: 'PJSIP/alice-00000000'
                    Context: 'park'
                    Exten: 's'
                    Priority: '1'
    -
        # wait for alice to be parked..
        ami-events:
            conditions:
                match:
                    Event: 'Newexten'
                    Channel: 'PJSIP/alice-00000000'
                    Context: 'park'
            count: 1
        # .. then bridge alice with carol
        ami-actions:
            action:
                Action: 'Bridge'
                Channel1: 'PJSIP/alice-00000000'
                Channel2: 'PJSIP/carol-00000002'
    # once alice has entered the bridge with carol, we're done
    -
        ami-events:
            conditions:
                match:
                    Event: 'BridgeEnter'
                    Channel: 'PJSIP/carol-00000002'
                    Context: 'default'
            count: 1
        ami-actions:
            action:
                Action: 'Hangup'
                Channel: 'PJSIP/alice-00000000'
    -
        ami-events:
            conditions:
                match:
                    Event: 'Hangup'
                    Channel: 'PJSIP/carol-00000002'
                    Context: 'default'
            count: 1
        stop_test:

properties:
    minversion: '13.6.0'
    dependencies:
        - python : twisted
        - python : starpy
        - asterisk : res_pjsip
        - asterisk : app_queue
    tags:
        - pjsip
        - queues
        - chan_local
    testconditions:
        -
            # this will check for leaking stasis subscriptions/taskprocessors at the end of the testrun
            name: 'taskprocessors'
