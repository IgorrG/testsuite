#!/usr/bin/env python
# vim: sw=3 et:
'''
Copyright (C) 2017, Voxbone, SA
Torrey Searle <torrey@voxbone.com>

This program is free software, distributed under the terms of
the GNU General Public License Version 2.
'''

import sys
import os
import re
import shutil
import logging
import signal
import subprocess
import time

from twisted.internet import reactor

sys.path.append("lib/python")
sys.path.append("utils")
from asterisk.asterisk import Asterisk
from asterisk.sipp import SIPpTest

logger = logging.getLogger(__name__)
WORKING_DIR = os.path.abspath(os.path.dirname(__file__))
TEST_DIR = os.path.dirname(os.path.realpath(__file__))

e164 = "3200000000"
sippA_logfile = WORKING_DIR + "/A_PARTY.log"
sippA_errfile = WORKING_DIR + "/A_PARTY_ERR.log"
sippA_statfile = WORKING_DIR + "/A_PARTY_STAT.log"

sippB_logfile = WORKING_DIR + "/B_PARTY.log"
sippB_errfile = WORKING_DIR + "/B_PARTY_ERR.log"

SIPP_SCENARIOS = [
    {
        'scenario' : 'B_PARTY.xml',
        '-i' : '127.0.0.1',
        '-p' : '5700',
        '-message_file' : sippB_logfile,
        '-error_file' : sippB_errfile,
        '-trace_msg' : '-trace_err',
    },
    {
        'scenario' : 'A_PARTY.xml',
        '-i' : '127.0.0.1',
        '-p' : '5061',
        '-m' : '1',
        '-s' : e164,
        '-message_file' : sippA_logfile,
        '-error_file' : sippA_errfile,
        '-trace_msg' : '-trace_err',
        '-trace_stat' : '-trace_stat',
        '-stf' : sippA_statfile,
    }
]

def main():
    test = SIPpTest(WORKING_DIR, TEST_DIR, SIPP_SCENARIOS)
    test.reactor_timeout = 100;

    reactor.run()

    if not test.passed:
        return 1

    ret_A = subprocess.call([WORKING_DIR + "/check_reinvite_rtt.py", WORKING_DIR+"/A_PARTY_STAT.log"])

    if (ret_A != 0):
	    logger.debug("Slow ReInvite Detected!")
	    return 1

    return 0

if __name__ == "__main__":
    sys.exit(main() or 0)

