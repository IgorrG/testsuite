testinfo:
    summary: Test that ensures bridged channels in Stasis() can be stolen properly.
    description: |
        "This test originates one Local channel into Stasis() and Echo() and
        another Local channel into a pair of echo applications. It then puts
        the Stasis() Local channel half with uniqueid StasisChannel into a
        bridge and uses the AMI bridge action to pull StasisChannel and
        EchoChannel into a bridge and hangs them up. This test verifies that
        the appropriate events are generated."

test-modules:
    add-test-to-search-path: True
    test-object:
        typename: ari.AriBaseTestObject
    modules:
        -
            config-section: pluggable-config
            typename: 'pluggable_modules.EventActionModule'

pluggable-config:
    -
        ami-start:
        ari-requests:
            -
                method: 'post'
                uri: 'channels/EchoChannel'
                params:
                    endpoint: 'Local/echo@default'
                    extension: 'echo'
                    otherChannelId: 'SecondEchoChan'
            -
                method: 'post'
                uri: 'channels/StasisChannel'
                params:
                    endpoint: 'Local/echo@default'
                    app: 'testsuite'
                    otherChannelId: 'SecondStasisChan'
            -
                method: 'post'
                uri: 'bridges/test_bridge'
    -
        ari-events:
            match:
                type: StasisStart
                application: testsuite
                args: []
                channel:
                    id: 'StasisChannel'
            count: 1
        ari-requests:
            method: 'post'
            uri: 'bridges/test_bridge/addChannel'
            params:
                channel: 'StasisChannel'
    -
        ari-events:
            match:
                type: ChannelEnteredBridge
                channel:
                    id: 'StasisChannel'
            count: 1
        ami-actions:
            action:
                action: 'Bridge'
                Channel1: 'StasisChannel'
                Channel2: 'EchoChannel'
    -
        ari-events:
            match:
                type: ChannelLeftBridge
                channel:
                    id: 'StasisChannel'
            count: 1
    -
        ari-events:
            match:
                type: StasisEnd
                application: testsuite
                channel:
                    id: 'StasisChannel'
            count: 1
    -
        ami-events:
            conditions:
                match:
                    Event: BridgeEnter
                    uniqueid: 'StasisChannel'
                nomatch:
                    bridgeuniqueid: 'test_bridge'
            count: 1
        ami-actions:
            -
                action:
                    action: 'Hangup'
                    Channel: 'StasisChannel'
    -
        ami-events:
            conditions:
                match:
                    Event: BridgeEnter
                    uniqueid: 'EchoChannel'
            count: 1
        ami-actions:
            -
                action:
                    action: 'Hangup'
                    Channel: 'EchoChannel'
    -
        ami-events:
            conditions:
                match:
                    Event: Hangup
                    uniqueid: 'EchoChannel'
            count: 1
        ari-requests:
            method: 'delete'
            uri: 'bridges/test_bridge'
        stop_test:

properties:
    dependencies:
        - python : autobahn.websocket
        - python : requests
        - python : twisted
        - python : starpy
        - asterisk : res_ari_channels
        - asterisk : res_ari_bridges
        - asterisk : app_echo
    tags:
        - ARI
